<?xml version="1.0" encoding="UTF-8" ?>
<!-- mapper DTD 선언 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper 자체가 DAO 분리되어 나온 개념이기 때문에 namespace는 DAO 명을 따라가는 경우가 일반적임 -->
<mapper namespace="LoginDAO">
	<!-- 로그인 정보 가져오기 -->
 	<select id="getLoginInfo" parameterType="userinfo" resultType="userinfo">
		SELECT UI.USER_IDX
			 , UI.USER_ID
			 , UI.USER_NAME
			 , UI.USER_NICKNAME
			 , UI.USER_PW
			 , UI.USER_INTRO
			 , UI.USER_INFO
			 , UI.REGDATE
			 , UP.FILE_NAME
		  FROM INSTAGRAM.USER_INFO UI
		  LEFT JOIN INSTAGRAM.USER_PHOTO UP 
		  ON UI.USER_IDX = UP.USER_IDX
		 WHERE USER_ID = #{user_id}
		   AND USER_PW = #{user_pw}
 	</select>
 	
 	<!-- 회원가입 정보 저장하기 -->
 	<insert id="setJoinInfo" parameterType="userinfo">
		INSERT INTO INSTAGRAM.USER_INFO
		(
			USER_ID
			, USER_NAME
			, USER_NICKNAME
			, USER_PW
			, USER_INTRO
			, USER_INFO
			, REGDATE
		)
		VALUES
		(
			#{user_id}
			, #{user_name}
			, #{user_nickname}
			, #{user_pw}
			, NULL
			, NULL
			, NOW()
		)
 	</insert>
 	<!-- 아이디 중복 체크하기 -->
 	<select id="getIdDuplCheck" parameterType="userinfo" resultType="userinfo">
		SELECT USER_IDX
			 , USER_ID
		  FROM INSTAGRAM.USER_INFO
		 WHERE USER_ID = #{user_id}
 	</select>
 	<!-- 닉네임 중복 체크하기 -->
 	<select id="getNicknameDuplCheck" parameterType="userinfo" resultType="userinfo">
		SELECT USER_IDX
			 , USER_NICKNAME
		  FROM INSTAGRAM.USER_INFO
		 WHERE USER_NICKNAME = #{user_nickname}
 	</select>
 	<!-- 비밀번호 찾기 -->
 	<select id="getFindPwInfo" parameterType="userinfo" resultType="userinfo">
		SELECT USER_IDX
			 , USER_ID
			 , USER_PW
		  FROM INSTAGRAM.USER_INFO
		 WHERE USER_ID = #{user_id}
 	</select>
</mapper>
